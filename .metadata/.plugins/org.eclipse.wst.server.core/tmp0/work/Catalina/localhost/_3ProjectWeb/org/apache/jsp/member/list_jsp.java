/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.84
 * Generated at: 2024-03-06 23:50:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import dto.Board;
import dao.BoardDao;
import dto.Member;
import java.util.List;
import java.sql.*;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("dto.Member");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("dao.BoardDao");
    _jspx_imports_classes.add("dto.Board");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("   \r\n");
      out.write("\r\n");
      out.write("\r\n");

 String memberId = (String)session.getAttribute("userId");
 boolean login = memberId == null ? false : true;
 BoardDao dao = BoardDao.getInstance();
 List<Board> list = dao.selectList(); // selectList() 호출해보기

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>모하지갤러리</title>\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css\" rel=\"stylesheet\" \r\n");
      out.write("integrity=\"sha384-4bw+/aepP/YC94hEpVNVgiZdgIC5+VKNBQNGCHeKRQN+PtmoHDEXuppvnDJzQIu9\" crossorigin=\"anonymous\">\r\n");
      out.write("<link rel=\"icon\" href=\"favicon.ico\" type=\"image/x-icon\">\r\n");
      out.write("<script src=\"https://kit.fontawesome.com/c47106c6a7.js\"\r\n");
      out.write("	crossorigin=\"anonymous\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../css/style.css\">\r\n");
      out.write("<script defer src=\"js/ie.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write("    /* 링크의 기본 스타일을 변경하여 링크 색상이 변하지 않도록 합니다. */\r\n");
      out.write("    a {\r\n");
      out.write("        color: inherit; /* 부모 요소의 색상을 상속받아 링크 색상을 설정합니다. */\r\n");
      out.write("        text-decoration: none; /* 밑줄을 제거합니다. */\r\n");
      out.write("    }\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("  <body>\r\n");
      out.write("	<header>\r\n");
      out.write("		<div class=\"inner\">\r\n");
      out.write("			<!-- 메인화면을 나타내주는 가장 큰 메뉴 -->\r\n");
      out.write("			<h1>\r\n");
      out.write("				<a href=\"../mainPage.jsp\">MOHAJIGALLERY</a>\r\n");
      out.write("			</h1>\r\n");
      out.write("			<ul id=\"gnb\">\r\n");
      out.write("				<!-- gnb 메뉴바 >기능이 있는 작은 메뉴들 -->\r\n");
      out.write("				<li><a href=\"../mainpage/intro.jsp\">INTRO</a></li>\r\n");
      out.write("				<li><a href=\"../mainpage/gallery.jsp\">GALLERY</a></li>\r\n");
      out.write("				<li><a href=\"../mainpage/youtube.jsp\">YOUTUBE</a></li>\r\n");
      out.write("				<li><a href=\"list.jsp\">COMMUNITY</a></li>\r\n");
      out.write("				<li><a href=\"../mainpage/location.jsp\">LOCATION</a></li>\r\n");
      out.write("			</ul>\r\n");
      out.write("			<ul class=\"util\">\r\n");

    if ((String)session.getAttribute("userId") != null)
    	// Member member = (Member)session.getAttribute("member");
    	//if (member.getId() != null) 
    	{          
        // 로그인 상태일 때의 출력 

      out.write("			\r\n");
      out.write("<li><a href=\"../login/mypage.jsp\">");
      out.print((String) session.getAttribute("userName"));
      out.write("님 로그인</a></li>\r\n");
      out.write("				<li><a href=\"../login/help.jsp\">Help</a></li>\r\n");
      out.write("				<li><a href=\"../login/logout.jsp\">Logout</a></li>\r\n");
      out.write("				");
if("admin".equals((String)session.getAttribute("userId"))){ 
      out.write("\r\n");
      out.write("					<li><a href=\"../login/member_list.jsp\">admin page</a></li>		\r\n");
      out.write("				\r\n");
      out.write("				");
 } else{
      out.write("			\r\n");
      out.write("				<li><a href=\"../login/mypage.jsp\">Mypage</a></li>\r\n");
      out.write("				");
}
      out.write("\r\n");
      out.write("			</ul>\r\n");
  
    } else {                       
        // 로그인되지 않은 상태일 때의 출력           				

      out.write("\r\n");
      out.write("                <li><a href=\"../login/help.jsp\">Help</a></li>\r\n");
      out.write("				<li><a href=\"../login/login_main.jsp\">Login</a></li>\r\n");
      out.write("				<li><a href=\"../login/join.jsp\">join</a></li>\r\n");
      out.write("			</ul>		\r\n");
      out.write("		<!-- 메뉴의 상단영역 -->\r\n");
      out.write("		");

    }

      out.write("    </div>\r\n");
      out.write("	</header>\r\n");
      out.write(" <figure style=\"background-color: #FFFFFF; padding-top: 5px;\">\r\n");
      out.write("\r\n");
 if (login) {          // 로그인 상태일 때의 출력 
      out.write("\r\n");
      out.write("<div class=\"container\" style=\"padding-top: 5px;\">\r\n");
      out.write(" <br>\r\n");
      out.write("<div><h4 style=\"font-weight: 800;\">Community</h4></div>\r\n");
      out.write("<table class=\"table\">\r\n");
      out.write("  <thead>\r\n");
      out.write("    <tr>\r\n");
      out.write("      <th scope=\"col\"></th>\r\n");
      out.write("      <th scope=\"col\">작성자</th>\r\n");
      out.write("      <th scope=\"col\">제목</th>\r\n");
      out.write("      <th scope=\"col\">작성일시</th>\r\n");
      out.write("      <th scope=\"col\">조회수</th>\r\n");
      out.write("    </tr>\r\n");
      out.write("  </thead>\r\n");
      out.write("  <tbody class=\"table-group-divider\">\r\n");
      out.write("\r\n");
      out.write("   \r\n");
 int count1 = 0; 
   for (Board board : list) {
    if ("admin".equals(board.getId())) {
    	
        if (count1 >= 3) {
            break; // 3개를 출력했으면 루프를 종료합니다.
             } 
      out.write("\r\n");
      out.write("<tr style=\"background-color: #00040c;\">\r\n");
      out.write("    <th style=\"background-color: #f8f9fa; display: none;\" scope=\"row\">");
      out.print( board.getNum() );
      out.write("</th>\r\n");
      out.write("    <th style=\"background-color: #f8f9fa;font-weight: bold; color: #0000ff;  scope=\"row\">공지</th>\r\n");
      out.write("    <td style=\"background-color: #f8f9fa; font-weight: bold;\"><a href=\"searchAcc.jsp?id=");
      out.print( board.getId() );
      out.write('"');
      out.write('>');
      out.print( board.getId() );
      out.write("</a></td>\r\n");
      out.write("    <td style=\"background-color: #f8f9fa; font-weight: bold;\"><a href=\"view.jsp?num=");
      out.print( board.getNum() );
      out.write("&id=");
      out.print( board.getId() );
      out.write('"');
      out.write('>');
      out.print( board.getTitle() );
      out.write("</a></td>\r\n");
      out.write("    <td style=\"background-color: #f8f9fa; font-weight: bold;\">");
      out.print( board.getRegtime() );
      out.write("</td>\r\n");
      out.write("    <td style=\"background-color: #f8f9fa; font-weight: bold;\">");
      out.print( board.getHits() );
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
 
count1++;
System.out.println(board.getNum()); } 
      out.write("\r\n");
      out.write("<!-- 일반 게시물 출력 -->\r\n");
      out.write("   ");
 } 
      out.write("\r\n");
      out.write("<!-- admin 게시물 출력 -->\r\n");
 int count = 1; 
      out.write('\r');
      out.write('\n');
 for (Board normal : list) { 

      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("    <th style= \"display: none;\" scope=\"row\">");
      out.print( normal.getNum() );
      out.write("</th>\r\n");
      out.write("    <th scope=\"row\">");
      out.print( count++ );
      out.write("</th>\r\n");
      out.write("    <td><a href=\"searchAcc.jsp?id=");
      out.print( normal.getId() );
      out.write('"');
      out.write('>');
      out.print( normal.getId() );
      out.write("</a></td>\r\n");
      out.write("    <td><a href=\"view.jsp?num=");
      out.print( normal.getNum() );
      out.write("&id=");
      out.print( normal.getId() );
      out.write('"');
      out.write('>');
      out.print( normal.getTitle() );
      out.write("</a></td>\r\n");
      out.write("    <td>");
      out.print( normal.getRegtime() );
      out.write("</td>\r\n");
      out.write("    <td>");
      out.print( normal.getHits() );
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
 }
      out.write("\r\n");
      out.write("  </tbody>\r\n");
      out.write("</table>\r\n");
      out.write("<nav class=\"navbar navbar-expand-lg bg-body-tertiary\" style=\"text-align: center;\">\r\n");
      out.write("    <div class=\"container-fluid\">\r\n");
      out.write("        <button type=\"button\" class=\"btn btn-sm btn-outline-secondary\" onclick=\"location.href='write.jsp'\" style=\"float: right;\">글쓰기</button>        \r\n");
      out.write("        <form class=\"d-flex\" role=\"search\" action=\"searchList.jsp\">\r\n");
      out.write("            <input class=\"form-control me-2\" type=\"search\" name=\"search\" placeholder=\"내용검색\" aria-label=\"Search\">\r\n");
      out.write("            <button class=\"btn btn-sm btn-outline-secondary\" type=\"submit\">Search</button>\r\n");
      out.write("        </form>\r\n");
      out.write("    </div>\r\n");
      out.write("</nav> \r\n");
      out.write(" \r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
 } else{
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("alert('접근 권한이 없습니다. 로그인 해주세요!');\r\n");
      out.write("	 location.href = \"../login/login_main.jsp\";\r\n");
      out.write("	 </script>\r\n");
 }
      out.write("\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-HwwvtgBNo3bZJJLYd8oVXjrBZt8cqVSpeBNS5n7C8IVInixGAoxmnlMuBnhbgrkm\" crossorigin=\"anonymous\"></script>\r\n");
      out.write(" 	</figure>\r\n");
      out.write(" 	<footer>\r\n");
      out.write("		<div class=\"inner\">\r\n");
      out.write("			<div class=\"upper\">\r\n");
      out.write("				<h1>DCODELAB</h1>\r\n");
      out.write("				<ul>\r\n");
      out.write("					<li><a href=\"#\">Plicy</a></li>\r\n");
      out.write("					<li><a href=\"#\">Terms</a></li>\r\n");
      out.write("					<li><a href=\"#\">Family Site</a></li>\r\n");
      out.write("					<li><a href=\"#\">Sitemap</a></li>\r\n");
      out.write("				</ul>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"lower\">\r\n");
      out.write("				<address>\r\n");
      out.write("					Lorem ipsum dolor sit amet consectetur adipisicing elit. Molestias,\r\n");
      out.write("					voluptatem? <br> TEL: 010-7760-3956\r\n");
      out.write("				</address>\r\n");
      out.write("				<p>2020 DCODELAB uuuuummmmm</p>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<!-- 기업정보 -->\r\n");
      out.write("	</footer>\r\n");
      out.write("  </body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
